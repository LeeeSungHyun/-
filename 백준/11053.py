# 가장 긴 증가하는 부분 수열

# 문제
# 수열 A가 주어졌을 때, 가장 긴 증가하는 부분 수열을 구하는 프로그램을 작성하시오.

# 예를 들어, 수열 A = {10, 20, 10, 30, 20, 50} 인 경우에 가장 긴 증가하는 부분 수열은 A = {10, 20, 10, 30, 20, 50} 이고, 길이는 4이다.

# 입력
# 첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.

# 둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

# 출력
# 첫째 줄에 수열 A의 가장 긴 증가하는 부분 수열의 길이를 출력한다.

# 예제 입력 1 
# 6
# 10 20 10 30 20 50
# 예제 출력 1 
# 4

N = int(input())                                        #수열의 크기
seq = list(map(int, input().split()))                   

dp = [0] * N                            # 초기값 0인 리스트 생성 (수열크기에 맞춰)

for i in range(N):
    tmp = 0                             # 길이 초기값
    for j in range(i):                  
        if seq[i] > seq[j]:             #수열  뒤에자리랑 앞에자리랑 비교해서  뒤에자리가 더 크면 
            tmp = max(tmp, dp[j])       # 해당 dp[j]에 담겨있는 길이값과 지금 tmp값중 젤 높은값으로 tmp 갱신
    dp[i] = tmp + 1                 
    
print(max(dp))